# Создайте класс студента.
# ○ Используя дескрипторы проверяйте ФИО на первую заглавную букву и наличие только букв.
# ○ Названия предметов должны загружаться из файла CSV при создании экземпляра. Другие предметы в экземпляре
# недопустимы.
# ○ Для каждого предмета можно хранить оценки (от 2 до 5) и результаты тестов (от 0 до 100).
# ○ Также экземпляр должен сообщать средний балл по тестам для каждого предмета и по оценкам всех предметов
# вместе взятых.
#
# Вам предоставлен файл subjects.csv, содержащий предметы. Сейчас в файл записана следующая информация.

class Student:
    def __init__(self, name: str, subjects_file: str):
        self.name = name
        self.path = subjects_file

    def add_subject(self, subject, grade, test_score):
        """
        метод для добавления информации о предмете, оценке и результате теста.
        """
        pass

    def get_average_grade(self):
        """
        метод, возвращающий средний балл студента по всем предметам.
        """
        pass

    def get_subjects(self):
        """
        метод, возвращающий список всех предметов, по которым есть информация у студента.
        """
        pass

    def get_average_grades(students):
        """
        функция, которая принимает список студентов и выводит информацию о средних баллах для каждого студента.
        """
        pass

    def get_subject_average(students, subject):
        """
        функция, которая принимает список студентов и название  предмета, и выводит информацию о среднем балле по этому
        предмету для каждого студента
        """
        pass

    def get_top_student(students, subject):
        """
        функция, которая принимает список студентов и название предмета, и выводит информацию о студенте с наивысшим
        средним баллом по этому предмету
        """
        pass
    