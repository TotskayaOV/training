import os
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, ContentTypes, CallbackQuery, ParseMode
from datetime import datetime, timedelta

from loader import dp
from view.keyboards.inline import kb_date, kb_tech_lev35, kb_cancel_fsm
from view.states import DelJiraSLA, DelJiraTime, DelJiraCount, DelPortal, DelGeneralData, DelCalls
from view.callback import technik_menu_35, menu_2_date
from controller import deleted_data_for_date


@dp.callback_query_handler(technik_menu_35.filter(level_t35='del_jsla'))
async def upload_calls_count(call: CallbackQuery, admin: bool):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –≤ state —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö Jira SLA
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    if admin:
        await dp.bot.edit_message_text(text=f'–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b> –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Öüëáüèª:',
                                       chat_id=user_id, message_id=current_msg, reply_markup=kb_date(),
                                       parse_mode=ParseMode.HTML)
        await DelJiraSLA.next()
    else:
        dp.bot.edit_message_text(text=f'–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏',
                                 chat_id=user_id, message_id=current_msg)


@dp.callback_query_handler(menu_2_date.filter(date_priority='yesterday'), state=DelJiraSLA.date_data)
async def file_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ Jira sla –∑–∞ –≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_yesterday = datetime.now().date() - timedelta(days=1)
    deleted_data_for_date('j_sla', date_yesterday)
    await dp.bot.edit_message_text(text=f'–î–∞–Ω–Ω—ã–µ Jira SLA –∑–∞ {date_yesterday} —É–¥–∞–ª–µ–Ω—ã.',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.callback_query_handler(menu_2_date.filter(date_priority='bf_yesterday'), state=DelJiraSLA.date_data)
async def file_bf_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ Jira sla –∑–∞ –ø–æ–∑–∞–≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_bf_yesterday = datetime.now().date() - timedelta(days=2)
    deleted_data_for_date('j_sla', date_bf_yesterday)
    await dp.bot.edit_message_text(text=f'–î–∞–Ω–Ω—ã–µ Jira SLA –∑–∞ {date_bf_yesterday} —É–¥–∞–ª–µ–Ω—ã.',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.message_handler(state=DelJiraSLA.date_data, content_types=ContentTypes.ANY)
async def file_date_catch(message: Message, state: FSMContext):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –∏ —É–¥–∞–ª–µ–Ω–∏–µ Jira sla
    """
    try:
        data_obj = message.text
        up_data = datetime.strptime(data_obj, '%Y-%m-%d')
    except:
        await message.answer(text='–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b>',
                             parse_mode=ParseMode.HTML, reply_markup=kb_cancel_fsm)
        DelJiraSLA.date_data.set()
    else:
        deleted_data_for_date('j_sla', data_obj)
        await message.answer(text=f'–î–∞–Ω–Ω—ã–µ Jira SLA –∑–∞ {data_obj} —É–¥–∞–ª–µ–Ω—ã.', reply_markup=kb_tech_lev35)
        await state.reset_data()
        await state.finish()


@dp.callback_query_handler(technik_menu_35.filter(level_t35='del_jtime'))
async def upload_calls_count(call: CallbackQuery, admin: bool):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –≤ state —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö Jira Time
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    if admin:
        await dp.bot.edit_message_text(text=f'–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b> –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Öüëáüèª:',
                                       chat_id=user_id, message_id=current_msg, reply_markup=kb_date(),
                                       parse_mode=ParseMode.HTML)
        await DelJiraTime.next()
    else:
        dp.bot.edit_message_text(text=f'–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏',
                                 chat_id=user_id, message_id=current_msg)


@dp.callback_query_handler(menu_2_date.filter(date_priority='yesterday'), state=DelJiraTime.date_data)
async def file_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ Jira time –∑–∞ –≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_yesterday = datetime.now().date() - timedelta(days=1)
    deleted_data_for_date('j_time', date_yesterday)
    await dp.bot.edit_message_text(text=f'–î–∞–Ω–Ω—ã–µ Jira Time –∑–∞ {date_yesterday} —É–¥–∞–ª–µ–Ω—ã.',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.callback_query_handler(menu_2_date.filter(date_priority='bf_yesterday'), state=DelJiraTime.date_data)
async def file_bf_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ Jira time –∑–∞ –ø–æ–∑–∞–≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_bf_yesterday = datetime.now().date() - timedelta(days=2)
    deleted_data_for_date('j_time', date_bf_yesterday)
    await dp.bot.edit_message_text(text=f'–î–∞–Ω–Ω—ã–µ Jira Time –∑–∞ {date_bf_yesterday} —É–¥–∞–ª–µ–Ω—ã',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.message_handler(state=DelJiraTime.date_data, content_types=ContentTypes.ANY)
async def file_date_catch(message: Message, state: FSMContext):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –∏ —É–¥–∞–ª–µ–Ω–∏–µ Jira time
    """
    try:
        data_obj = message.text
        up_data = datetime.strptime(data_obj, '%Y-%m-%d')
    except:
        await message.answer(text='–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b>',
                             parse_mode=ParseMode.HTML, reply_markup=kb_cancel_fsm)
        DelJiraTime.date_data.set()
    else:
        deleted_data_for_date('j_time', data_obj)
        await message.answer(text=f'–î–∞–Ω–Ω—ã–µ Jira Time –∑–∞ {data_obj} —É–¥–∞–ª–µ–Ω—ã.', reply_markup=kb_tech_lev35)
        await state.reset_data()
        await state.finish()


@dp.callback_query_handler(technik_menu_35.filter(level_t35='del_jcount'))
async def upload_calls_count(call: CallbackQuery, admin: bool):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –≤ state —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö Jira count
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    if admin:
        await dp.bot.edit_message_text(text=f'–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b> –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Öüëáüèª:',
                                       chat_id=user_id, message_id=current_msg, reply_markup=kb_date(),
                                       parse_mode=ParseMode.HTML)
        await DelJiraCount.next()
    else:
        dp.bot.edit_message_text(text=f'–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏',
                                 chat_id=user_id, message_id=current_msg)


@dp.callback_query_handler(menu_2_date.filter(date_priority='yesterday'), state=DelJiraCount.date_data)
async def file_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ Jira count –∑–∞ –≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_yesterday = datetime.now().date() - timedelta(days=1)
    deleted_data_for_date('j_count', date_yesterday)
    await dp.bot.edit_message_text(text=f'–î–∞–Ω–Ω—ã–µ Jira count –∑–∞ {date_yesterday} —É–¥–∞–ª–µ–Ω—ã.',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.callback_query_handler(menu_2_date.filter(date_priority='bf_yesterday'), state=DelJiraCount.date_data)
async def file_bf_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ Jira count –∑–∞ –ø–æ–∑–∞–≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_bf_yesterday = datetime.now().date() - timedelta(days=2)
    deleted_data_for_date('j_count', date_bf_yesterday)
    await dp.bot.edit_message_text(text=f'–î–∞–Ω–Ω—ã–µ Jira count –∑–∞ {date_bf_yesterday} —É–¥–∞–ª–µ–Ω—ã.',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.message_handler(state=DelJiraCount.date_data, content_types=ContentTypes.ANY)
async def file_date_catch(message: Message, state: FSMContext):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –∏ –£–¥–∞–ª–µ–Ω–∏–µ Jira count
    """
    try:
        data_obj = message.text
        up_data = datetime.strptime(data_obj, '%Y-%m-%d')
    except:
        await message.answer(text='–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b>',
                             parse_mode=ParseMode.HTML, reply_markup=kb_cancel_fsm)
        DelJiraSLA.date_data.set()
    else:
        deleted_data_for_date('j_count', data_obj)
        await message.answer(text=f'–î–∞–Ω–Ω—ã–µ Jira count –∑–∞ {data_obj} —É–¥–∞–ª–µ–Ω—ã.', reply_markup=kb_tech_lev35)
        await state.reset_data()
        await state.finish()


@dp.callback_query_handler(technik_menu_35.filter(level_t35='del_portal'))
async def upload_calls_count(call: CallbackQuery, admin: bool):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –≤ state —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ü–æ—Ä—Ç–∞–ª
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    if admin:
        await dp.bot.edit_message_text(text=f'–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b> –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Öüëáüèª:',
                                       chat_id=user_id, message_id=current_msg, reply_markup=kb_date(),
                                       parse_mode=ParseMode.HTML)
        await DelPortal.next()
    else:
        dp.bot.edit_message_text(text=f'–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏',
                                 chat_id=user_id, message_id=current_msg)


@dp.callback_query_handler(menu_2_date.filter(date_priority='yesterday'), state=DelPortal.date_data)
async def file_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Ä—Ç–∞–ª–∞ –∑–∞ –≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_yesterday = datetime.now().date() - timedelta(days=1)
    deleted_data_for_date('portal', date_yesterday)
    await dp.bot.edit_message_text(text=f'–î–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª–∞ –∑–∞ {date_yesterday} —É–¥–∞–ª–µ–Ω—ã.',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.callback_query_handler(menu_2_date.filter(date_priority='bf_yesterday'), state=DelPortal.date_data)
async def file_bf_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Ä—Ç–∞–ª–∞ –∑–∞ –ø–æ–∑–∞–≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_bf_yesterday = datetime.now().date() - timedelta(days=2)
    deleted_data_for_date('portal', date_bf_yesterday)
    await dp.bot.edit_message_text(text=f'–î–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª–∞ –∑–∞ {date_bf_yesterday} —É–¥–∞–ª–µ–Ω—ã.',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.message_handler(state=DelPortal.date_data, content_types=ContentTypes.ANY)
async def file_date_catch(message: Message, state: FSMContext):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Ä—Ç–∞–ª–∞
    """
    try:
        data_obj = message.text
        up_data = datetime.strptime(data_obj, '%Y-%m-%d')
    except:
        await message.answer(text='–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b>',
                             parse_mode=ParseMode.HTML, reply_markup=kb_cancel_fsm)
        DelJiraSLA.date_data.set()
    else:
        deleted_data_for_date('portal', data_obj)
        await message.answer(text=f'–î–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª–∞ –∑–∞ {data_obj} —É–¥–∞–ª–µ–Ω—ã.', reply_markup=kb_tech_lev35)
        await state.reset_data()
        await state.finish()


@dp.callback_query_handler(technik_menu_35.filter(level_t35='del_general'))
async def upload_calls_count(call: CallbackQuery, admin: bool):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –≤ state —É–¥–∞–ª–µ–Ω–∏—è –æ–±—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    if admin:
        await dp.bot.edit_message_text(text=f'–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b> –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Öüëáüèª:',
                                       chat_id=user_id, message_id=current_msg, reply_markup=kb_date(),
                                       parse_mode=ParseMode.HTML)
        await DelGeneralData.next()
    else:
        dp.bot.edit_message_text(text=f'–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏',
                                 chat_id=user_id, message_id=current_msg)


@dp.callback_query_handler(menu_2_date.filter(date_priority='yesterday'), state=DelGeneralData.date_data)
async def file_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞ –≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_yesterday = datetime.now().date() - timedelta(days=1)
    deleted_data_for_date('general', date_yesterday)
    await dp.bot.edit_message_text(text=f'–û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞ {date_yesterday} —É–¥–∞–ª–µ–Ω—ã.',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.callback_query_handler(menu_2_date.filter(date_priority='bf_yesterday'), state=DelGeneralData.date_data)
async def file_bf_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞ –ø–æ–∑–∞–≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_bf_yesterday = datetime.now().date() - timedelta(days=2)
    deleted_data_for_date('general', date_bf_yesterday)
    await dp.bot.edit_message_text(text=f'–û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞ {date_bf_yesterday} —É–¥–∞–ª–µ–Ω—ã.',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.message_handler(state=DelGeneralData.date_data, content_types=ContentTypes.ANY)
async def file_date_catch(message: Message, state: FSMContext):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –∏ —É–¥–∞–ª–µ–Ω–∏–µ –æ–±—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏
    """
    try:
        data_obj = message.text
        up_data = datetime.strptime(data_obj, '%Y-%m-%d')
    except:
        await message.answer(text='–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b>',
                             parse_mode=ParseMode.HTML, reply_markup=kb_cancel_fsm)
        DelGeneralData.date_data.set()
    else:
        deleted_data_for_date('general', data_obj)
        await message.answer(text=f'–û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞ {data_obj} —É–¥–∞–ª–µ–Ω—ã.', reply_markup=kb_tech_lev35)
        await state.reset_data()
        await state.finish()


@dp.callback_query_handler(technik_menu_35.filter(level_t35='del_call'))
async def upload_calls_count(call: CallbackQuery, admin: bool):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –≤ state —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–≤–æ–Ω–∫–∞—Ö
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    if admin:
        await dp.bot.edit_message_text(text=f'–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b> –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Öüëáüèª:',
                                       chat_id=user_id, message_id=current_msg, reply_markup=kb_date(),
                                       parse_mode=ParseMode.HTML)
        await DelCalls.next()
    else:
        dp.bot.edit_message_text(text=f'–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏',
                                 chat_id=user_id, message_id=current_msg)


@dp.callback_query_handler(menu_2_date.filter(date_priority='yesterday'), state=DelCalls.date_data)
async def file_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∑–≤–æ–Ω–∫–∞—Ö –∑–∞ –≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_yesterday = datetime.now().date() - timedelta(days=1)
    deleted_data_for_date('call', date_yesterday)
    await dp.bot.edit_message_text(text=f'–î–∞–Ω–Ω—ã–µ –æ –∑–≤–æ–Ω–∫–∞—Ö –∑–∞ {date_yesterday} —É–¥–∞–ª–µ–Ω—ã.',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.callback_query_handler(menu_2_date.filter(date_priority='bf_yesterday'), state=DelCalls.date_data)
async def file_bf_yesterday_date_catch(call: CallbackQuery, state: FSMContext):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∑–≤–æ–Ω–∫–∞—Ö –∑–∞ –ø–æ–∑–∞–≤—á–µ—Ä–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    date_bf_yesterday = datetime.now().date() - timedelta(days=2)
    deleted_data_for_date('call', date_bf_yesterday)
    await dp.bot.edit_message_text(text=f'–î–∞–Ω–Ω—ã–µ –æ –∑–≤–æ–Ω–∫–∞—Ö –∑–∞ {date_bf_yesterday} —É–¥–∞–ª–µ–Ω—ã.',
                                   chat_id=user_id, message_id=current_msg, reply_markup=kb_tech_lev35,
                                   parse_mode=ParseMode.HTML)
    await state.reset_data()
    await state.finish()


@dp.message_handler(state=DelCalls.date_data, content_types=ContentTypes.ANY)
async def file_date_catch(message: Message, state: FSMContext):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∑–≤–æ–Ω–∫–∞—Ö
    """
    try:
        data_obj = message.text
        up_data = datetime.strptime(data_obj, '%Y-%m-%d')
    except:
        await message.answer(text='–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–ì–ì–ì–ì-–ú–ú-–î–î</b>',
                             parse_mode=ParseMode.HTML, reply_markup=kb_cancel_fsm)
        DelCalls.date_data.set()
    else:
        deleted_data_for_date('call', data_obj)
        await message.answer(text=f'–î–∞–Ω–Ω—ã–µ –æ –∑–≤–æ–Ω–∫–∞—Ö –∑–∞ {data_obj} —É–¥–∞–ª–µ–Ω—ã.', reply_markup=kb_tech_lev35)
        await state.reset_data()
        await state.finish()
