from aiogram.types import Message, ContentTypes, CallbackQuery, ParseMode
from aiogram.dispatcher import FSMContext

from loader import dp, user_db
from view.states import EditTgId
from view.callback import mail_status, button_cancel, technik_menu_33
from view.keyboards.inline import kb_cancel_fsm, kb_tech_lev21
from controller import update_user_data_from_db, get_tg_user_data_to_str


@dp.callback_query_handler(technik_menu_33.filter(level_t33='edit_tg_data'))
async def edit_tg_id(call: CallbackQuery, admin: bool):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –≤ state –∏–∑–º–µ–Ω–µ–Ω–∏—è ID —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    current_msg = call.message.message_id
    user_id = call.from_user.id
    us_list = get_tg_user_data_to_str()
    if admin:
        await dp.bot.edit_message_text(text=f'–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è ID —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n'
                                            f'{us_list}\n –í–≤–µ–¥–∏—Ç–µ <b>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> –∏–∑ —Å–ø–∏—Å–∫–∞ üëÜ',
                                       chat_id=user_id, message_id=current_msg,
                                       reply_markup=kb_cancel_fsm, parse_mode=ParseMode.HTML)
        await EditTgId.next()
    else:
        dp.bot.edit_message_text(text=f'–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏',
                                 chat_id=user_id, message_id=current_msg)


@dp.message_handler(state=EditTgId.user_id, content_types=ContentTypes.ANY)
async def write_user_id(message: Message, state: FSMContext):
    users_input = message.text
    try:
        users_input = int(users_input)
        await state.update_data({'user_id': users_input})
        await message.answer(text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π ID —Ç–µ–ª–µ–≥—Ä–∞–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                             parse_mode=ParseMode.HTML, reply_markup=kb_cancel_fsm)
        await EditTgId.next()
    except:
        await message.answer(text='–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –í–≤–µ–¥–∏—Ç–µ <b>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> –∏–∑ —Å–ø–∏—Å–∫–∞. –¢–û–õ–¨–ö–û –¶–ò–§–†–´ ',
                             parse_mode=ParseMode.HTML, reply_markup=kb_cancel_fsm)
        await EditTgId.user_id.set()


@dp.message_handler(state=EditTgId.tg_id, content_types=ContentTypes.ANY)
async def write_tg_id(message: Message, state: FSMContext):
    users_input = message.text
    try:
        users_input = int(users_input)
        await state.update_data({'tg_id': users_input})
        data = await state.get_data()
        update_user_data_from_db('tg id', data)
        check_text = f'–¢–µ–ª–µ–≥—Ä–∞–º–º ID –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ id{data.get("tg_id")} üëç'
        await state.reset_data()
        await state.finish()
        await message.answer(text=f'{check_text}\n__________________________________\n\n'
                                  f'–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –µ–≥–æ id —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞, —É–¥–∞–ª–∏—Ç—å '
                                  f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –µ–≥–æ id —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '
                                  f'(–∏–º—è, id —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞, —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–º—É '
                                  f'–æ—Ç—á–µ—Ç–æ–≤)\n<i>–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ –∏—Ö —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–π–¥–∏—Ç–µ '
                                  f'–≤–æ –≤–∫–ª–∞–¥–∫—É "–î–æ–±–∞–≤–∏—Ç—å" –∏–ª–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"</i>',
                             parse_mode=ParseMode.HTML, reply_markup=kb_tech_lev21)
    except:
        await message.answer(text='–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –í–≤–µ–¥–∏—Ç–µ <b>—Ç–µ–ª–µ–≥—Ä–∞–º–º ID</b>. –¢–û–õ–¨–ö–û –¶–ò–§–†–´ ',
                             parse_mode=ParseMode.HTML, reply_markup=kb_cancel_fsm)
        await EditTgId.tg_id.set()
