def divide_numbers():
    """
    Функция позволяет выполнять запрос пользовательского ввода несколько раз без возврата в главное меню.
    блок try:
        Функция запрашивает пользовательский ввод чисел для деления и проводит проверку на наличие разделителя внутри. Если разделитель есть,
        преобразует строковые данные во float, если нет - в int. 
    блоки except:
        При возникновении ошибки ArithmeticError - деления на 0, выдает исключение
        При возникновении ошибки ValueError - введение данных(введения букв, либо введения 1 числа, вместо 2), выдает исключение.
        При возникновении любой другой ошибки можно добавить лоигрование для разработчикаи сообщение о том, что функция недоступна для пользователя
    блок else:
        При успешном выполнении блока try печататет в терминале результат деления
    блок finally:
        выполняется при любом исходе (успешном выполнении деления или при возникновении ошибки), предлагая пользователю попробовать разделить
        еще раз или выйти в главное меню
    """
    go_program = True
    while go_program:
        try:
            user_input = input("Введите числа для деления через пробел: ")
            a, b = user_input.replace(",", ".").split(" ")      # производит замену знака "," на ".", если нужно, и разделяет пользовательскую строку ввода по пробелу
            if '.' in a: a = float(a)
            else: a = int(a)
            if '.' in b: b = float(b)
            else: b = int(b)
            result = a / b
        except ArithmeticError as err:
            print('Деление на ноль недопустимо')
        except ValueError as err:
            print("Для операции деления нужно 2 числа")
        except Exception as err:    # обрабатывает любое другое исключение кроме указанных выше
            print(f'Ошибка: {err}')
        else:
            print(f"Ответ: {result}")
        finally:
            check_stop = input("Если хотите попробовать ввести еще раз, нажмите Enter.\n"
                               "Для выхода в главное меню введите любое число или букву: ")
            if check_stop:          # если переменная пустая, то это определяется как False
                go_program = False  # выход из цикла и остановка выполнения функции

                
def age_check():
    """
    Функция позволяет выполнять запрос возраста несколько раз без возврата в главное меню.
    блок try:
        Функция запрашивает пользовательский ввод возраста и проводит проверку на наличие разделителя внутри. Если разделитель есть,
        преобразует строковые данные во float, если нет - в int. 
    блоки except:
        При возникновении ошибки ValueError - введения данных(введения букв), выдает исключение.
        При возникновении любой другой ошибки можно добавить лоигрование для разработчикаи сообщение о том, что функция недоступна для пользователя
    блок else:
        При успешном выполнении блока try печататет в терминале результат
    блок finally:
        выполняется при любом исходе (успешном выполнении деления или при возникновении ошибки), предлагая пользователю попробовать разделить
        еще раз или выйти в главное меню
    """
    go_program = True
    while go_program:
        try:
            user_input = input("Введите свой возраст: ")
            if '.' in user_input: user_input = float(user_input)
            elif ',' in user_input: user_input = float(user_input.replace(",", ".")) # если пользователь ввел ",", меняет на "."
            else: user_input = int(user_input)
        except ValueError:
            print("Некорректный ввод")
        except Exception as err:    # обрабатывает любое другое исключение кроме указанных выше
            print(f'Ошибка: {err}')
        else:
            print(f"Ваш возраст {user_input}")
        finally:
            check_stop = input(
                "Если хотите попробовать ввести еще раз, нажмите Enter.\n"
                "Для выхода в главное меню введите любое число или букву: ")
            if check_stop:              # если переменная пустая, то это определяется как False
                go_program = False      # выход из цикла и остановка выполнения функции


def read_file():
    """
    Функция после своей работы сразу перенаправляет пользователя в главное меню, так как не предполагает передачу данных от пользователя.
    блок try:
        программа обращается  к файлу через встроенный модель чтения csv файлов, который гарантирует закрытие программой файла после его прочтения
        Передает строки в список my_list, далее циклом for перебирает все элементы, удаляя символ окончания строки и проверяя на возможность 
        перевода строки в float или int. Суммирует число с переменной result.
    блоки except:
        При возникновении ошибки ValueError - буквы или пустое значение, выдает исключение и переводит пользователя в главное меню..
        При возникновении FileNotFoundError - отсутствие файла, выдает исключение и переводит пользователя в главное меню.
    блок else:
        При успешном выполнении блока try печататет в терминале результат и переводит пользователя в главное меню.
    блок finally:
        не включен, так как не предполагает дополнительных действий от пользователя
    """
    try:
        with open('./numbers.csv', 'r', encoding='UTF-8') as file:
                my_list = file.readlines()
                result = 0
                for line in range(0, len(my_list)):
                    temp_string = my_list[line].rstrip("\n")
                    if '.' in temp_string: temp_stringt = float(temp_string)
                    else: temp_string = int(temp_string)
                    result += temp_string
    except ValueError:
        print("Некорректное значение числа в файле")
    except FileNotFoundError:
        print("Файл не найден")
    else:
        print(f"Сумма цифр в файле: {result}")


def main_menu():
    """
    Функция для пользовательского ввода данных перехода по главному меню.  
    """
    user_choise = input("Введите номер пунтка меню: ")
    match user_choise:
        case '1': return 1
        case '2': return 2
        case '3': return 3
        case '4': return 4
        case _: return 0


if __name__ == '__main__':
    """
    Функция старта выполенния программы. Выполняется постоянно за счет цикла while, корректный выход через "4. Выход" позволяет завершить пользвателю
    программу с exit code(0)
    """
    start_file = True
    while start_file:
        print("Главное меню:\n1. Разделить\n2. Ввести возраст\n3. Сложить цифры в файле\n4. Выход")
        check_choise = main_menu()
        match check_choise:
            case 1: divide_numbers()
            case 2: age_check()
            case 3: read_file()
            case 4:
                print("Хорошего дня!")
                start_file = False
            case 0: print("Ошибка ввода. Введите только цифру.")

