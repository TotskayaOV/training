# –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è, –ª–∏—á–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (–æ—Ç 1 –¥–æ 7).
# üìå–ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–≤–æ–¥–∞ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ JSON —Ñ–∞–π–ª.
# üìå–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ —É—Ä–æ–≤–Ω—é –¥–æ—Å—Ç—É–ø–∞.
# üìå–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—Å—Ç—É–ø–∞–µ—Ç –∫–ª—é—á—ë–º –¥–ª—è –∏–º–µ–Ω–∏.
# üìå–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞.
# üìå–ü—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è.

import os
import json
import csv

UPPER_LVL = 7
LOWER_LVL = 1
PATH_DB = './first_file.json'
PATH_CSV = './first_file.csv'

def input_name() -> str:
    user_input_name = input('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ exit –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã: ')
    if user_input_name == 'exit':
        exit()
    return user_input_name

def input_id_user(id_list) -> int:
    while True:
        user_input_id = input('–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ')
        if user_input_id in id_list:
            print('–¢–∞–∫–æ–π id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        else:
            return user_input_id

def input_level_access() -> int:
    while True:
        user_input_level = input('–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: ')
        if user_input_level.isdigit():
            if LOWER_LVL - 1 < int(user_input_level) < UPPER_LVL + 1:
                return int(user_input_level)
            else:
                continue
        else:
            continue

def load_file() -> dict:
    if os.path.exists(PATH_DB):
        with open(PATH_DB, 'r', encoding='UTF-8') as f:
            return json.load(f)
    else:
        return {}

def write_file(json_dict):
    with open(PATH_DB, 'w', encoding='UTF-8') as f:
        json.dump(json_dict, f, indent=4, ensure_ascii=False)

def convertation_json_to_csv():
    with (
        open(PATH_DB, 'r', encoding='UTF-8') as file_json,
        open(PATH_CSV, 'w+', encoding='UTF-8') as file_csv
    ):
        read_json = json.load(file_json)
        csv_writer = csv.writer(file_csv, delimiter=",", lineterminator="\r")
        csv_writer.writerow("ID", "–ò–º—è", "–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞")
        for lvl, values in read_json.items():
            for id_u, name in values.items():
                csv_writer.writerow([id_u, name, lvl])


def write_new_user():
    json_dict = load_file()
    if json_dict:
        id_list = [key for elem in list(json_dict.values()) for key, values in elem.items()]
    else:
        id_list = []
    name = input_name()
    id_u = input_id_user(id_list)
    level_access = input_level_access()
    lvl_dict = json_dict.get(str(level_access), {})
    lvl_dict[id_u] = name
    json_dict[str(level_access)] = lvl_dict
    write_file(json_dict)




if __name__ == '__main__':
    while True:
        write_new_user()
        convertation_json_to_csv()
